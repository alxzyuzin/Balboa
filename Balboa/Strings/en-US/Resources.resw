<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddingTrackToPlaylist" xml:space="preserve">
    <value>Adding track to playlist.</value>
  </data>
  <data name="Artist.Text" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="ArtistR.Text" xml:space="preserve">
    <value>Исполнитель</value>
  </data>
  <data name="Artists" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="BalboaExceptionMsg" xml:space="preserve">
    <value>"Method "{0}", module "{1}", line number {2} 
{3}"</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CheckDirectoryAvailability" xml:space="preserve">
    <value>Check the availability of the directory 
{0}
(See "Path to music collection" on the "Settings" page).</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CloseApplication" xml:space="preserve">
    <value>Close application</value>
  </data>
  <data name="CommunicationError" xml:space="preserve">
    <value>Server communication error.
</value>
  </data>
  <data name="ConnectedSuccesfully" xml:space="preserve">
    <value>Connected succesfully
 {0}</value>
  </data>
  <data name="ConnectionError" xml:space="preserve">
    <value>Connection error.</value>
  </data>
  <data name="ConnectionErrorDescription" xml:space="preserve">
    <value>An attempt to connect to the server {0} port {1} failed.
{2}</value>
  </data>
  <data name="ConnectionTest" xml:space="preserve">
    <value>Connection test</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="CriticalError" xml:space="preserve">
    <value>Critical error</value>
  </data>
  <data name="CurrentTrack" xml:space="preserve">
    <value>Current track</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>Exception {0}
{1}</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="FilesAndFolders" xml:space="preserve">
    <value>Files &amp; folders</value>
  </data>
  <data name="Genres" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="GoToSettings" xml:space="preserve">
    <value>Go to settings</value>
  </data>
  <data name="InitialServerResponseError" xml:space="preserve">
    <value>Error reading initial server response, check settings.</value>
  </data>
  <data name="InvalidInitialResponse" xml:space="preserve">
    <value>Server connection responce is not valid.
</value>
  </data>
  <data name="NewPlaylist" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="NoAudioFilesInFolder" xml:space="preserve">
    <value>Folder {0} doesn't contain audio files.</value>
  </data>
  <data name="NoSelectedItemsToAdd" xml:space="preserve">
    <value>No selected items to add.</value>
  </data>
  <data name="NullValueExceptionMsg" xml:space="preserve">
    <value>Parameter "{0}" is null.
Method "{1}",  module "{2}", line {3}. </value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PlaylisNotSelectedForLoad" xml:space="preserve">
    <value>No playlists selected for load.</value>
  </data>
  <data name="Playlist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="PlaylistCurrent" xml:space="preserve">
    <value>Current playlist</value>
  </data>
  <data name="PlaylistDeleting" xml:space="preserve">
    <value>Deleting playlist</value>
  </data>
  <data name="PlaylistError" xml:space="preserve">
    <value>Error loading playlist {0}
{1}.</value>
  </data>
  <data name="PlaylistIsEmpty" xml:space="preserve">
    <value>Playlist is empty.</value>
  </data>
  <data name="PlaylistLoaded" xml:space="preserve">
    <value>Playlist {0}  loaded succesfully.</value>
  </data>
  <data name="PlaylistLoading" xml:space="preserve">
    <value>Playlist loading.</value>
  </data>
  <data name="PlaylistNew" xml:space="preserve">
    <value>New playlist.</value>
  </data>
  <data name="PlaylistNotSelectedForDelete" xml:space="preserve">
    <value>No playlists selected for delete.</value>
  </data>
  <data name="PlaylistNotSelectedForRename" xml:space="preserve">
    <value>No playlists selected for rename.</value>
  </data>
  <data name="PlaylistRename" xml:space="preserve">
    <value>Renaming playlist</value>
  </data>
  <data name="PortValueMustBeLess65536" xml:space="preserve">
    <value>'Port' value must be less then 65536</value>
  </data>
  <data name="PortValueMustBeNumber" xml:space="preserve">
    <value>'Port' value must be a number.</value>
  </data>
  <data name="Renaming playlist" xml:space="preserve">
    <value>Renaming playlist</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchComplete" xml:space="preserve">
    <value>Search complete.

Nothing found.</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>Searching ...</value>
  </data>
  <data name="ServerNameChanged" xml:space="preserve">
    <value>Server name changed without changing 'Path to music collection'
 'Path to music collection' will be cleared.</value>
  </data>
  <data name="ServerReturnError" xml:space="preserve">
    <value>Server return error : 
 {0}</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Statistic" xml:space="preserve">
    <value>Statistic</value>
  </data>
  <data name="StreamsOpeningError" xml:space="preserve">
    <value>An unknown error was detected when opening I / O streams</value>
  </data>
  <data name="TypeArtistNameHere" xml:space="preserve">
    <value>Type artist name here</value>
  </data>
  <data name="TypeGenreNameHere" xml:space="preserve">
    <value>Type genre name here</value>
  </data>
  <data name="UnauthorizedAccessError" xml:space="preserve">
    <value>Unauthorized access error.</value>
  </data>
  <data name="UnexpectedServerError" xml:space="preserve">
    <value>Unexpected Server error\n {0}</value>
  </data>
  <data name="ViewUpdateIntervalMustBe100" xml:space="preserve">
    <value>View update interval must be 100 or more.</value>
  </data>
  <data name="ViewUpdateIntervalMustNumber" xml:space="preserve">
    <value>'View update interval' value must be  a number.</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>